FROM arm32v7/python:3.10-bullseye

RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    make \
    cmake \
    gcc \
    libcurl4-openssl-dev \
    libffi-dev \
    libfreetype6-dev \
    libjpeg-dev \
    libpulse-dev \
    libssl-dev \
    swig \
    zlib1g-dev \
    alsa-utils \
    espeak

# Required for OpenCV
RUN apt-get install -y \
    # Hierarchical Data Format
    libhdf5-dev libhdf5-serial-dev \
    # for image files
    libjpeg-dev libtiff5-dev libpng-dev \
    # libjasper-dev\
    # for video files
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    # for gui
    #libqt4-test libqtgui4 libqtwebkit4 libgtk2.0-dev \
    # high def image processing
    libilmbase-dev libopenexr-dev

RUN pip install --no-cache-dir \
    azure-iot-device \
    azure-mgmt-iothub \
    numpy \
    opencv-contrib-python \
    requests \
    trollius \
    tornado==4.5.3 \
    opencv-python \
    asyncio \
    pyttsx3

RUN apt-get install -y \
    vim


RUN pip install --no-cache-dir \
    azure-core \
    azure-cosmos \
    azure-cognitiveservices-vision-face \
    gpiozero

RUN wget https://github.com/joan2937/pigpio/archive/master.zip && \
    unzip master.zip && \
    cd pigpio-master && \
    make && \
    make install

RUN CFLAGS=-fcommon pip install RPi.GPIO

WORKDIR /app

#COPY requirements.txt ./
#RUN pip install -r requirements.txt

COPY . .

ENTRYPOINT ["bash", "init.sh"]

# sudo docker run --privileged=true --device /dev/vchiq --device /dev/snd